#!/bin/bash

function usage() {
    echo "usage: $0 <old-api-servers ...> -- <new-api-servers ...> -- <scale-servers ...>"
    echo "The usage of this script is the same as reactor-setup."
    echo "In order to run this script, reactor-setup must be in your PATH."
    echo "Additionally, all new API servers and scale servers should have"
    echo "a configuration in your current Reactor cluster."
}

# Check commands.
if [ "$#" -lt "2" ]; then
    usage
    exit 1
fi

# Build our lists.
old_servers=""
new_servers=""
scale_servers=""
in_scale="n"
in_new="n"

for arg; do
    if [ "$arg" == "--" ]; then
        if [ "$in_new" == "y" ]; then
            in_scale="y"
        else
            in_new="y"
        fi
    elif [ "$in_scale" == "y" ]; then
        scale_servers="$scale_servers $arg"
    elif [ "$in_new" == "y" ]; then
        new_servers="$new_servers $arg"
    else
        old_servers="$old_servers $arg"
    fi
done

# Add everything in slowly.
all_servers="$old_servers $new_servers"
full_cluster="$old_servers"
for server in $new_servers; do
    full_cluster="$full_cluster $server"
    reactor-setup $full_cluster -- $all_servers
done

# Point all the scale servers to the new set.
reactor-setup $new_servers -- $scale_servers

# Wait for the cluster to settle.
echo "Waiting for cluster to settle (60 seconds)..."
sleep 60

# Remove everything slowly.
for old_server in $old_servers; do
    new_cluster=""
    for server in $full_cluster; do
        if [ "$server" != "$old_server" ]; then
            new_cluster="$new_cluster $server"
        fi
    done
    full_cluster="$new_cluster"
    reactor-setup $full_cluster -- $full_cluster
    reactor-setup $old_server -- $old_server
    echo "Waiting for cluster to settle (30 seconds)..."
    sleep 30
done
